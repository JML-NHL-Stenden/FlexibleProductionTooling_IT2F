name: Python + Docker CI tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      POSTGRES_VERSION: ${{ secrets.POSTGRES_VERSION }}
      ODOO_VERSION: ${{ secrets.ODOO_VERSION }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      ODOO_HTTP_PORT: ${{ secrets.ODOO_HTTP_PORT }}
      PGADMIN_DEFAULT_EMAIL: ${{ secrets.PGADMIN_DEFAULT_EMAIL }}
      PGADMIN_DEFAULT_PASSWORD: ${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
      PGADMIN_PORT: ${{ secrets.PGADMIN_PORT }}
      MOSQUITTO_PORT: ${{ secrets.MOSQUITTO_PORT }}
      MQTT_HOST: ${{ secrets.MQTT_HOST }}
      MQTT_PORT: ${{ secrets.MQTT_PORT }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug env
        run: printenv | sort

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and start Docker Compose services
        working-directory: ${{ github.workspace }}
        run: |
          docker compose up -d --build
          echo "Waiting for services to start..."
          sleep 10

      - name: Test mqtt-bridge
        run: docker compose run --rm -e CI=true mqtt-bridge python bridge.py

      - name: Test mqtt-publish
        run: docker compose run --rm -e CI=true mqtt-publish python publish.py

      - name: Stop Docker Compose services
        if: always()
        run: docker compose down
